import re
from Crypto.Util.number import bytes_to_long, long_to_bytes
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
hexn = "00B559B114201A223510E609940E449F74ED3A9638CD1E028329DB47D5E26ED6C5BB93E0E0F9AE711936159E2B074BAA971A006E9929A10425132C8330F9D43921F6853285F2521C7CE5A3435563BF35E02F48CA35DD6BD1643A8814A1DBDFA6CEDC0C8A0CAF7FD60BE0EF4B867572BD9852C1144E5ACF30F6CB7F30879EF1A2D3F8D34FE8E45C02A3BEAAAF0BE9053963127B464AF38DDB5ECC9898F130DA35FDB80B68F0BA9EB2832E39A98BA7FE35DA6F3055870831673714381C1CB3D713E1E757D461B827EAC1EFDAD3FAACEF2CDCBA668B89D1983F81B44C75758DD1BB2ABD5526B23A645500554E162F56ADC9817CED96B35A780DD25AD5A674DBF182BD"
hexd = "01FB9496227E45C3A360139890E2D05A0D0EB71E22966B6155AEBC6021F7D551942DA232429B3FBA79245288214A8A304AE6D87960F0C6ED92F4108D053958A2E5D72E23179AAD0DABBF6768DD2C840A3213ED92B6781D475201489921A8245B8C7668F7A609E57602F409EDEF542F20DE8532F3B83F2C0EAE42F3185AB8A88C0A6B43521563611DBD48560A022C383641A09AE946D17CE10C26F58DDDB6E48CDC902B079F5CF04DC5F451F91D40D3228EA0F1F87FC0CDEC566BF1CE61EC2E1611FD8FF548FA603F98D022F667B49799DDBDF83DB32737E60121151C8876977423B056A8A8CD08CE75CAA6822A2778E5BFDCC3DE5FFB3123ED7E4CEA5BE80D69"
hexe = "010001"
hexp = "00CBAF8B426B773C414F377E0D5F6F46A9DD01C44DFBEE3A71951FAB54BDB8891B743243B7D057C8F3DD136C81B6885621E593572CC7003254D61371FABBF4CD110C6A448CA32468061C4B58332E995497924E8E20A13797AD95AE918642EC173FA593189766EA705B162B4E0DAC47E8F0DC866BB9D7B8EEA0357A932759C429F9"
hexq = "00E3ED95A9D765ABE9D49A30440AB0B2276AD174373378F3C0C622200522B88A76E6EA59D3B6EFA08CB6C075B5F39611A4A25D27708DE0FBF2443C391DA61AB4220F1CDC2CFED3233B1D5D3F39BB9C0CB9BEB9B4445B8C55932F2B5DB72C5334A48C81B5C741D3699FE1D634FFB22138B93E5FDC40FD846F6455E24C5744AD6FE5"
hexdp = "2F939567B24A6B9CA5B0449543116EE406677F3EE7F5C158FE882330EC0FCA96CB116297F0E6505E05E99F92BCDC23A24F49973732546D6D3B83D73FC5DF6C76EAFB777F922BD2D07A936ECAA5BBD2F2848E2CCC9A5BADE631EC50B997B025CE0C12CBCFB18E59282D8977F5E1A3FA5928698D881F476715ACE830AF245C99A1"
hexdq = "00DE2A4E9F661CEC1CD7E612F5BF95CB913045490A2559D7FE27224C23B55C3B5AFA69A37501F34082E7FF60BD21D93D094459987FD54B5F491DC9B5C2788DBED713F40588B63A07352FC21C46A1DFD1679BC85735EA2637A3676ED5C21DAA5CBDA75727603981608B3F0E144AC7CE2A0426103A17FF047FAF45277751F8D73521"

try:
    with open("ciphertext.bin", "rb") as file:
        ciphertext = file.read()
        #print(c)
        
except FileNotFoundError:
    print("file not found")

n = int(hexn, 16)
e = int(hexe, 16)
d = int(hexd, 16)
p = int(hexp, 16)
q = int(hexq, 16)
dp = int(hexdp, 16)
dq = int(hexdq, 16)

#m = pow(c, d, n)
#m = pow(c, d) % n

# Create an RSA key object
key = RSA.construct((n, e, d, p, dp, dq))

# Create an RSA cipher object
cipher = PKCS1_OAEP.new(key)

# Decrypt the ciphertext
plaintext = cipher.decrypt(ciphertext)

print("Decrypted plain text: ", plaintext)